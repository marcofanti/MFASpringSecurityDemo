# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url = jdbc:mysql://behaviosec.local:3306/behaviosecproxyless?serverTimezone=EST5EDT&verifyServerCertificate=false&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = loginnp1
spring.datasource.database = behaviosecproxyless
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

#spring.datasource.url=jdbc:h2:file:/Users/marcofanti/Documents/Development/fr2/SpringLogin
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select username, password, active from behaviosecproxyless.user where username=?
spring.queries.roles-query=select u.username, r.role from behaviosecproxyless.user u inner join behaviosecproxyless.user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always

server.port=19876

logging.level.com.behaviosec=TRACE
logging.level.org.springframework.security.saml=TRACE
logging.level.org.opensaml.xml=TRACE

behaviosec.maxtries = 1
spring.basename=messages
# AWS - Local changes go here
behaviosec.standaloneurl = http://localhost:19876/
#https://ping.example.com:8443/
#https://partner.behaviosec.com/
behaviosec.forgerockurl = http://openam2.example.com:8080/
behaviosec.forgerockadmin = amadmin

behaviosec.loginControllerRedirectionurl = http://openam.example.com:18080/examples/jsp/snp/b.jsp
behaviosec.loginControllerRedirectionurlAdmin = http://openam.example.com:19876/home/homepage
behaviosec.dashboardurl = https://localhost:8443/
#AWS - http://localhost:19876/admin/home
